AWSTemplateFormatVersion: '2010-09-09'
Description: 'Red para E-commerce: VPC, Subredes, Rutas'

Parameters:
  Environment:
    Type: String

Resources:
  CommerceVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 172.20.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-commerce-vpc'

  AppPubSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref CommerceVPC
      CidrBlock: 172.20.0.0/24
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-pub-subnet1'

  AppPubSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref CommerceVPC
      CidrBlock: 172.20.1.0/24
      AvailabilityZone: !Select [1, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-pub-subnet2'

  AppPrivSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref CommerceVPC
      CidrBlock: 172.20.2.0/24
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-priv-subnet1'

  AppPrivSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref CommerceVPC
      CidrBlock: 172.20.3.0/24
      AvailabilityZone: !Select [1, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-priv-subnet2'

  DBSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref CommerceVPC
      CidrBlock: 172.20.4.0/24
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-db-subnet1'

  DBSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref CommerceVPC
      CidrBlock: 172.20.5.0/24
      AvailabilityZone: !Select [1, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-db-subnet2'

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-igw'

  AttachIGW:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref CommerceVPC
      InternetGatewayId: !Ref InternetGateway

  NATGatewayEIP:
    Type: AWS::EC2::EIP
    DependsOn: AttachIGW
    Properties:
      Domain: vpc

  NATGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NATGatewayEIP.AllocationId
      SubnetId: !Ref AppPubSubnet1
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-nat-gw'

  PublicRT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref CommerceVPC
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-pub-rt'

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachIGW
    Properties:
      RouteTableId: !Ref PublicRT
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PrivateRT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref CommerceVPC
      Tags:
        - Key: Name
          Value: !Sub '${Environment}-priv-rt'

  PrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRT
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway

  PubAssoc1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref AppPubSubnet1
      RouteTableId: !Ref PublicRT

  PubAssoc2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref AppPubSubnet2
      RouteTableId: !Ref PublicRT

  PrivAssoc1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref AppPrivSubnet1
      RouteTableId: !Ref PrivateRT

  PrivAssoc2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref AppPrivSubnet2
      RouteTableId: !Ref PrivateRT
